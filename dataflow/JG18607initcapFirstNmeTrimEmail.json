{
	"name": "JG18607initcapFirstNmeTrimEmail",
	"properties": {
		"folder": {
			"name": "JG186076"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NoDup_Cust",
						"type": "DatasetReference"
					},
					"name": "CamelCaseFisrtNameCust"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "JG186076InitcapRMspcharConFNLN",
						"type": "DatasetReference"
					},
					"name": "JG186076InitcapRMspcharConFNLN"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Address as string,",
				"          City as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CamelCaseFisrtNameCust",
				"CamelCaseFisrtNameCust derive(FirstName = initCap(FirstName),",
				"          LastName = initCap(LastName),",
				"          Email = trim(Email,' '),",
				"          Address = regexReplace(Address,\"[$,*,%]\",\"\"),",
				"          FullName = concat(initCap(FirstName),initCap(LastName))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Address as string,",
				"          City as string,",
				"          Country as string",
				"     ),",
				"     partitionFileNames:['InitCapTrimConcat'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> JG186076InitcapRMspcharConFNLN"
			]
		}
	}
}