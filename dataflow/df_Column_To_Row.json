{
	"name": "df_Column_To_Row",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "adls_ls",
						"type": "LinkedServiceReference"
					},
					"name": "ColToRowSrc"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "adls_ls",
						"type": "LinkedServiceReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn"
				},
				{
					"name": "Flatten"
				}
			],
			"script": "source(output(\n\t\tcol1 as string,\n\t\tcol2 as string,\n\t\t{col3 } as string\n\t),\n\tuseSchema: false,\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'td255024',\n\tfolderPath: 'Input',\n\tfileName: 'UnPivot.txt',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ColToRowSrc\nColToRowSrc derive(Col4 = split(concat(col1, \",\", col2, \",\", {col3 }) , ',')) ~> DerivedColumn\nDerivedColumn foldDown(unroll(Col4),\n\tmapColumn(\n\t\tCol4\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten\nFlatten sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCol1 as string,\n\t\tCol2 as string,\n\t\tCol3 as string,\n\t\tAgg_Col as short\n\t),\n\tformat: 'delimited',\n\tfileSystem: 'td255024',\n\tfolderPath: 'Output',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
		}
	}
}