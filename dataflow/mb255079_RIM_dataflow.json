{
	"name": "mb255079_RIM_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "mb255079_src_customer",
						"type": "DatasetReference"
					},
					"name": "customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DistinctCustomer",
						"type": "DatasetReference"
					},
					"name": "DistinctCustomer"
				}
			],
			"transformations": [
				{
					"name": "selectcust1"
				},
				{
					"name": "windowRowNum"
				},
				{
					"name": "filterDistinct"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Address as string,",
				"          City as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customer",
				"customer select(mapColumn(",
				"          CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          Address,",
				"          City,",
				"          Country",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectcust1",
				"selectcust1 window(over(CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          Address,",
				"          City,",
				"          Country),",
				"     asc(CustomerID, true),",
				"     rownum = rowNumber()) ~> windowRowNum",
				"windowRowNum filter(rownum==1) ~> filterDistinct",
				"filterDistinct sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DistinctCustomer"
			]
		}
	}
}