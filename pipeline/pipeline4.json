{
	"name": "pipeline4",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "file_list",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "To check inbound dir empty or not",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(activity('Get Metadata1').output.childItems)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Inbound Dir is Empty",
								"errorCode": "404"
							}
						}
					]
				}
			},
			{
				"name": "To check inbound have para files or not",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "To check inbound dir empty or not",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(\ncontains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name2),'\"',',','\"type\":\"File\"}'))),\nif(\ncontains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name1),'\"',',','\"type\":\"File\"}'))),1,0),0)\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail2",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@concat(if(\ncontains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name2),'\"',',','\"type\":\"File\"}'))),\npipeline().parameters.file_name1,\nif(contains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name1),'\"',',','\"type\":\"File\"}'))),pipeline().parameters.file_name2,'Both the files')),\n' is not present in inbound dir')",
									"type": "Expression"
								},
								"errorCode": "404"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Execute Pipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "subppl_of_ppl4",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			},
			{
				"name": "Notebook1",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "To check inbound have para files or not",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/vu255001/Demo",
					"baseParameters": {
						"file_name1": {
							"value": "@pipeline().parameters.file_name1",
							"type": "Expression"
						},
						"file_name2": {
							"value": "@pipeline().parameters.file_name2",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "adb_ls",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Para files faliure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "To check inbound have para files or not",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://prod-03.eastus.logic.azure.com:443/workflows/a7b63c7c6bc8404e988f8e59f85eec3b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=U-sh46Sz2oePKsX8FuGSRUhD9Q_cs5AXvS2JfrSNBfc",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n    \"Subject\":\"Faluire of inbound to input transfer activity\",\n    \"DataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"PipelineName\" : \"@{pipeline().Pipeline}\", \n    \"EmailTo\" : \"@{pipeline().parameters.email_id}\",\n    \"ErrorMessage\" : \"404\",\n    \"Activity\" : \"@{concat(if(\ncontains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name2),'\"',',','\"type\":\"File\"}'))),\npipeline().parameters.file_name1,\nif(contains(activity('Get Metadata1').output.childitems,\njson(concat('{\"name\":','\"',string(pipeline().parameters.file_name1),'\"',',','\"type\":\"File\"}'))),pipeline().parameters.file_name2,'Both the files')),\n' is not present in inbound dir')}\",\n    \"FileName\":\"Check-in and Inflight service\"\n    \n   }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Pipeline success",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Notebook1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-20.eastus.logic.azure.com:443/workflows/144ac395e1c34d1cb5fd524e6e239575/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=o-2Wx_7w9CoOX5RTkJEZhaLrC8e5IsKBx0pOdX-lWV8",
					"method": "POST",
					"body": {
						"value": "{\n    \"Subject\":\"Success\",\n    \"FileName\":\"Check-in and Inflight service\",\n    \"DataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"PipelineName\" : \"@{pipeline().Pipeline}\", \n    \"EmailTo\" : \"@{pipeline().parameters.email_id}\",\n    \n    \n   }",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"file_name1": {
				"type": "string",
				"defaultValue": "Table1.csv"
			},
			"file_name2": {
				"type": "string",
				"defaultValue": "Table2.csv"
			},
			"email_id": {
				"type": "string",
				"defaultValue": "visu.utkarsh@teradata.com"
			}
		},
		"folder": {
			"name": "vu255001"
		},
		"annotations": [],
		"lastPublishTime": "2023-06-26T09:54:31Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}